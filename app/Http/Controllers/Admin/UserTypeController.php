<?phpnamespace App\Http\Controllers\Admin;use App\Http\Controllers\Controller;use Illuminate\Http\Request;use Response;use Illuminate\Foundation\Auth\AuthenticatesUsers;use Illuminate\Database\Eloquent\Model;//Auth facadeuse Auth, Storage, Log, View, App;use App\Http\Requests;use App\User;use App\Exceptions\Handler;use Illuminate\Support\Facades\DB;use App\UserType;use Illuminate\Support\Facades\Input;class UserTypeController extends Controller{    public function __construct()    {        $this->middleware('auth');    }    // User Types List used in officeregions.blade to list using stored procedure    public function userTypesList()    {        $user = Auth::user();        $usertypes_list = DB::select('call sp_selectUserTypes(1,0,"")');        return view('admin.usertypes', ['usertypes' => $usertypes_list,'user' =>$user]);    }    // Office/Region Add and Update used in officeregions.blade model popups using stored procedure    public function addUserType(Request $request)    {         	$user = Auth::user();        if($request->editID!='')        {            $usertype = UserType::where('userType', '=', $request->userType)->first();            if ($usertype === null) {             $officer_update = DB::select('call sp_CRUDUserTypes(2,'.$request->editID.',"'.$request->userType.'",0)');                $request->session()->flash('success', 'User type updated successfully.');                }else{                 $request->session()->flash('error', 'User type name already exits!');              }                return redirect(url(route('admin.usertypes')));           }else {                    $usertype = UserType::where('userType', '=', $request->userType)->first();                        if ($usertype === null) {                                        $officer_insert = DB::select('call sp_CRUDUserTypes(1,0,"'.$request->userType.'",1)');                                 $request->session()->flash('success', 'User type was successful added!');              }else{                $request->session()->flash('error', 'User type name already exits!');              }                        return redirect(url(route('admin.usertypes')));       }     }    // User Type Deactivate single/multiple using stored procedure    public function deActivate(Request $request)     {               $user = Auth::user();               foreach ($request->ChkEvent as $key => $id) {                            $officer_deactivate = DB::select('call sp_commonprocedure(2,'.$id.',"usertypes")');         }                $request->session()->flash('success', 'User types(s) deactivated successfully.');             return redirect(url(route('admin.usertypes')));        }    // User Type activate single/multiple using stored procedure     public function activate(Request $request)     {               $user = Auth::user();        foreach ($request->ChkEvent as $key => $id) {                             $officer_activate = DB::select('call sp_commonprocedure(1,'.$id.',"usertypes")');        }                $request->session()->flash('success', 'User types(s) activated successfully.');             return redirect(url(route('admin.usertypes')));        }     // User Type delete single/multiple using stored procedure     public function delete(Request $request)     {       $user = Auth::user();        foreach ($request->ChkEvent as $key => $id) {                           $officer_delete = DB::select('call sp_commonprocedure(3,'.$id.',"usertypes")');         }                $request->session()->flash('error', 'User types(s) deleted successfully.');             return redirect(url(route('admin.usertypes')));       }    // User Type select and used the modal popup edit screen from ajax request from officeregion_custom.js    public function userTypeSelect(Request $request ,$id)    {               $usertype_data = UserType::where('id', '=', $id)->first();        return json_encode(["success" => true, $usertype_data]);    }    }